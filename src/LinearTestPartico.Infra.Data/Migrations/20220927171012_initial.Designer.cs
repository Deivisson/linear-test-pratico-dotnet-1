// <auto-generated />
using System;
using LinearTestPartico.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LinearTestPartico.Infra.Data.Migrations
{
    [DbContext(typeof(ContextBase))]
    [Migration("20220927171012_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LinearTestPratico.Dominio.CanalVendaProdutoRoot.CanalVendaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(true)
                        .HasColumnType("int(11)")
                        .HasColumnName("Id");

                    b.Property<int>("CanalVendaId")
                        .HasColumnType("int(11)")
                        .HasColumnName("CanalVendaId");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int(11)")
                        .HasColumnName("ProdutoId");

                    b.HasKey("Id");

                    b.HasIndex("CanalVendaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("CanalVendasProdutos", (string)null);
                });

            modelBuilder.Entity("LinearTestPratico.Dominio.CanalVendaRoot.CanalVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(true)
                        .HasColumnType("int(11)")
                        .HasColumnName("Id");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Descricao");

                    b.HasKey("Id");

                    b.ToTable("CanalVendas", (string)null);
                });

            modelBuilder.Entity("LinearTestPratico.Dominio.ProdutoRoot.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(true)
                        .HasColumnType("int(11)")
                        .HasColumnName("Id");

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Descricao");

                    b.HasKey("Id");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("LinearTestPratico.Dominio.CanalVendaProdutoRoot.CanalVendaProduto", b =>
                {
                    b.HasOne("LinearTestPratico.Dominio.CanalVendaRoot.CanalVenda", "CanalVenda")
                        .WithMany("CanaisVendas")
                        .HasForeignKey("CanalVendaId")
                        .IsRequired();

                    b.HasOne("LinearTestPratico.Dominio.ProdutoRoot.Produto", "Produto")
                        .WithMany("CanaisVendas")
                        .HasForeignKey("ProdutoId")
                        .IsRequired();

                    b.Navigation("CanalVenda");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LinearTestPratico.Dominio.CanalVendaRoot.CanalVenda", b =>
                {
                    b.Navigation("CanaisVendas");
                });

            modelBuilder.Entity("LinearTestPratico.Dominio.ProdutoRoot.Produto", b =>
                {
                    b.Navigation("CanaisVendas");
                });
#pragma warning restore 612, 618
        }
    }
}
